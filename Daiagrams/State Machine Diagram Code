@startuml

[*] --> TaskAssigned : Task is created and assigned

' Child starts working on the task
TaskAssigned --> TaskInProgress : Child starts task

' Child completes the task, moving to waiting for approval
TaskInProgress --> WaitingForApproval : completeTask()

' Task is waiting for parent approval
WaitingForApproval --> TaskApproved : approveTask()
WaitingForApproval --> TaskRejected : rejectTask()

' If the parent rejects the task, it goes back to "TaskInProgress"
TaskRejected --> TaskInProgress : reworkTask()

' If the child fails to complete the task before deadline
TaskInProgress --> TaskExpired : timeLimitReached()

' If the parent approves the task, update child's score
state "Task Approved" as TaskApproved {
}

TaskApproved --> UpdateScore : updateChildScore()

' After updating the score, the task is marked as completed
state "Update Score" as UpdateScore {
}

UpdateScore --> TaskCompleted : finalizeTask()

' Option to extend time
TaskExpired --> TaskInProgress : extendTime()

' Task can also be deleted at any stage
TaskAssigned --> TaskDeleted : deleteTask()
TaskInProgress --> TaskDeleted : deleteTask()
WaitingForApproval --> TaskDeleted : deleteTask()
TaskExpired --> TaskDeleted : deleteTask()

' Final states
state "Task Completed" as TaskCompleted
TaskCompleted --> [*]

state "Task Expired" as TaskExpired
TaskExpired --> [*]

state "Task Deleted" as TaskDeleted
TaskDeleted --> [*]

@enduml
